# called by update-infra-plan.yaml
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      azure_credentials:
        required: true

jobs:
  called_job:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    # environment: develop-customer-specific-fixer
    steps:
      - name: Check out repository ${{ github.repository }}
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.1"

      - name: Setup Terragrunt
        shell: bash
        run: |
          wget "https://github.com/gruntwork-io/terragrunt/releases/download/v${TG_VERSION}/terragrunt_linux_amd64" -O /usr/local/bin/terragrunt -q
          chmod +x /usr/local/bin/terragrunt
          terragrunt --version
        env:
          TG_VERSION: "0.69.9"

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set env used by Terraform
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE
          echo "ARM_SUBSCRIPTION_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq .subscriptionId -r)" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq .tenantId -r)" >> $GITHUB_ENV
          echo "ARM_CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq .clientId -r)" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq .clientSecret -r)" >> $GITHUB_ENV
          echo "TERRAFORM_VERSION=$(cat .terraform-version)" >> $GITHUB_ENV
          echo "TERRAGRUNT_VERSION=$(cat .terragrunt-version)" >> $GITHUB_ENV
          echo "TERRAFORM_BACKEND_RESOURCE_GROUP_NAME=$(echo '${{ vars.TERRAFORM_BACKEND_CONFIG }}' | jq .terraformBackendResourceGroupName -r)" >> $GITHUB_ENV
          echo "TERRAFORM_BACKEND_STORAGE_ACCOUNT_NAME=$(echo '${{ vars.TERRAFORM_BACKEND_CONFIG }}' | jq .terraformBackendStorageAccountName -r)" >> $GITHUB_ENV
          echo "TF_VAR_customer_name=${{ vars.TF_VAR_CUSTOMER_NAME }}" >> $GITHUB_ENV
          echo "TF_VAR_location=${{ vars.TF_VAR_LOCATION }}" >> $GITHUB_ENV
          echo "TF_VAR_region_code=${{ vars.TF_VAR_REGION_CODE }}" >> $GITHUB_ENV
          echo "TERRAFORM_BACKEND_RESOURCE_GROUP_NAME=$(echo '${{ vars.TERRAFORM_BACKEND_CONFIG }}' | jq .terraformBackendResourceGroupName -r)"
          echo "TERRAFORM_BACKEND_STORAGE_ACCOUNT_NAME=$(echo '${{ vars.TERRAFORM_BACKEND_CONFIG }}' | jq .terraformBackendStorageAccountName -r)"
          echo "TF_VAR_customer_name=${{ vars.TF_VAR_CUSTOMER_NAME }}"
          echo "TF_VAR_location=${{ vars.TF_VAR_LOCATION }}"
          echo "TF_VAR_region_code=${{ vars.TF_VAR_REGION_CODE }}"

      - name: Terragrunt run-all plan
        shell: bash
        # ! ↓ cdコマンドで移動する先に開発用のTerraformのルートterragrunt.hclがある場所に移動する必要がある
        run: |
          cd $GITHUB_WORKSPACE/terraform/live/customer-specific/development
          terragrunt run-all plan --terragrunt-non-interactive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
